Experimentos realizados durante o projeto de Iniciação Científica

Soluções criadas com o objetivo de representar uma fórmula lógica proposicional através da linguagem Java, objetivando-se o baixo consumo de memória e eficiência computacional.
Sendo que Uma fórmula pode ser uma fórmula atômica ou uma fórmula composta.

Toda fórmula atômica possui um identificador.
Toda fórmula composta tem um conectivo e zero ou mais subfórmulas.

Todo conectivo tem uma aridade (um número inteiro maior ou igual a 0).
Numa fórmula composta, a aridade do conectivo determina a quantidade de subfórmulas. Isto é, se numa fórmula composta o conectivo tem aridade 3, esta fórmula terá três subfórmulas.

Exs.:

A&B 
conectivo: &   aridade:2 
subfórmulas: A, B


A&(B&C)
conectivo: & aridade:2 
subfórmulas: A, B&C

!A
conectivo:!  aridade:1
subfórmulas: A

TOP
conectivo: TOP aridade:0
subfórmulas: 0

Conectivos usados no KEMS:
Zero-ários
TOP (veracidade), BOTTOM (falsidade)
Unários:
! (negação, não), @ (consistência), * (inconsistência)
Binários:
& (conjunção, e) , | (disjunção, ou), -> (implicação; se, então)



A análise das soluções é feita através do software PERF, cujo comando é:
perf stat java -jar ARQJAR.jar
-------------------------------------------------------------------------------------

Como criar um arquivo .jar através do compilador do java


Passos: 
1) Compilar o arquivo principal 'main.java', através do comando:
	javac -cp . main.java
Este comando ira gerar o arquivo 'main.class', que pode ser executado através do comando:
	java main
Através deste comando, pode-se adicionar o número de fórmulas que serão criadas, como por exemplo:
	java main 50
Neste caso 50 fórmulas serão criadas.

2) Criar o arquivo 'manifest.mf'. Este arquivo conterá as informações relativas à classe que o arquivo .jar irá executar inicialmente. Sua estrutura base é:
	Manifest-Version: 1.0
	Created-By: Emerson Shigueo Sugimoto
	Main-Class: main

O 'Main-Class' contém a definição da classe que o arquivo .jar irá chamar em sua execução.

3) Adicione o manifesto ao arquivo .jar criado através do comando:
	jar cvfm nomeSolucao.jar manifest.mf *

4) Para executar o arquivo .jar, basta usar o comando:
	java -jar nomeSolucao.jar 
Para adicionar o número de fórmulas à serem criadas pela solução, basta usar o comando:
	java -jar nomeSolucao.jar 12
Neste caso 12 fórmulas serão criadas.
